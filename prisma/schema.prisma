// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Comment {
  id          Int      @id @default(autoincrement())
  body        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  post        Post     @relation(fields: [postId], references: [id])
  postId      Int
  user        User     @relation("UserComments", fields: [userId], references: [id])
  userId      Int
  clerkUser   User?    @relation("ClerkUserComments", fields: [clerkUserId], references: [clerkId])
  clerkUserId String?
}

model Post {
  id          Int       @id @default(autoincrement())
  body        String
  title       String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation("UserPosts", fields: [userId], references: [id])
  userId      Int
  clerkUser   User?     @relation("ClerkUserPosts", fields: [clerkUserId], references: [clerkId])
  clerkUserId String?
  comments    Comment[]
}

model User {
  id            Int       @id @default(autoincrement())
  clerkId       String?   @unique
  firstName     String
  image         String?
  lastName      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  comments      Comment[] @relation("UserComments")
  clerkComments Comment[] @relation("ClerkUserComments")
  posts         Post[]    @relation("UserPosts")
  clerkPosts    Post[]    @relation("ClerkUserPosts")
}
